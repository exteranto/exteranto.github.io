{
  "title": "@exteranto/tabs",
  "sections": [
    {
      "main": true,
      "id": "class-tabs",
      "title": "Class <code>Tabs</code>",
      "code": "import { Tabs } from '@exteranto/tabs'"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-active",
      "name": "active",
      "content": {
        "block": {
          "title": "method <code>active</code>",
          "body": {
            "description": [
              "Returns the current active tab."
            ],
            "returns": {
              "type": "Promise<TabInterface>",
              "description": "Promise with the active tab instance"
            }
          }
        }
      },
      "code": "s3:Tabs.active"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-all",
      "name": "all",
      "content": {
        "block": {
          "title": "method <code>all</code>",
          "body": {
            "description": [
              "Returns all open tabs."
            ],
            "returns": {
              "type": "Promise<TabInterface[]>",
              "description": "Promise with all open tabs"
            }
          }
        }
      },
      "code": "s3:Tabs.all"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-all-in-current-window",
      "name": "allInCurrentWindow",
      "content": {
        "block": {
          "title": "method <code>allInCurrentWindow</code>",
          "body": {
            "description": [
              "Returns all open tabs in the current window."
            ],
            "returns": {
              "type": "Promise<TabInterface[]>",
              "description": "Promise with all open tabs in the current window"
            }
          }
        }
      },
      "code": "s3:Tabs.allInCurrentWindow"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-pinned",
      "name": "pinned",
      "content": {
        "block": {
          "title": "method <code>pinned</code>",
          "body": {
            "description": [
              "Returns all pinned tabs."
            ],
            "returns": {
              "type": "Promise<TabInterface[]>",
              "description": "Promise with all pinned tabs"
            }
          }
        }
      },
      "code": "s3:Tabs.pinned"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-with-url",
      "name": "withUrl",
      "content": {
        "block": {
          "title": "method <code>withUrl</code>",
          "body": {
            "description": [
              "Returns all open tabs with the specified URL."
            ],
            "parameters": [
              {
                "type": "url: string",
                "description": "The url to look for"
              }
            ],
            "returns": {
              "type": "Promise<TabInterface[]>",
              "description": "Promise with all open tabs with the specified URL"
            }
          }
        }
      },
      "code": "s3:Tabs.withUrl"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-query",
      "name": "query",
      "content": {
        "block": {
          "title": "method <code>query</code>",
          "body": {
            "description": [
              "Returns all tabs that match the query."
            ],
            "parameters": [
              {
                "type": "query: object",
                "description": "The query object, corresponds to Chrome APIs"
              }
            ],
            "returns": {
              "type": "Promise<TabInterface[]>",
              "description": "Promise with all tabs that match the query"
            }
          }
        }
      },
      "code": "s3:Tabs.query"
    },
    {
      "parent": "class-tabs",
      "id": "class-tabs-method-open",
      "name": "open",
      "content": {
        "block": {
          "title": "method <code>open</code>",
          "body": {
            "description": [
              "Open a new tab."
            ],
            "parameters": [
              {
                "type": "url: string",
                "description": "The url of the new tab"
              },
              {
                "type": "active: bool",
                "description": "Whether to switch focus to the new tab",
                "optional": true
              }
            ],
            "returns": {
              "type": "Promise<TabInterface>",
              "description": "Promise with the open tab"
            }
          }
        }
      },
      "code": "s3:Tabs.open"
    },
    {
      "main": true,
      "id": "interface-tab-interface",
      "title": "Interface <code>TabInterface</code>",
      "code": "import { TabInterface } from '@exteranto/tabs'"
    },
    {
      "parent": "interface-tab-interface",
      "id": "interface-tab-interface-method-url",
      "name": "url",
      "content": {
        "block": {
          "title": "method <code>url</code>",
          "body": {
            "description": [
              "Return the tab URL."
            ],
            "returns": {
              "type": "string",
              "description": "The tab URL"
            }
          }
        }
      },
      "code": "s3:TabInterface.url"
    },
    {
      "parent": "interface-tab-interface",
      "id": "interface-tab-interface-method-close",
      "name": "close",
      "content": {
        "block": {
          "title": "method <code>close</code>",
          "body": {
            "description": [
              "Close the tab."
            ],
            "returns": {
              "type": "Promise<void>",
              "description": "Promise resolved after the tab was closed"
            }
          }
        }
      },
      "code": "s3:TabInterface.close"
    },
    {
      "parent": "interface-tab-interface",
      "id": "interface-tab-interface-method-reload",
      "name": "reload",
      "content": {
        "block": {
          "title": "method <code>reload</code>",
          "body": {
            "description": [
              "Reload the tab."
            ],
            "returns": {
              "type": "Promise<TabInterface>",
              "description": "Promise with the reloaded tab instance"
            }
          }
        }
      },
      "code": "s3:TabInterface.reload"
    },
    {
      "parent": "interface-tab-interface",
      "id": "interface-tab-interface-method-duplicate",
      "name": "duplicate",
      "content": {
        "block": {
          "title": "method <code>duplicate</code>",
          "body": {
            "description": [
              "Duplicate the tab."
            ],
            "returns": {
              "type": "Promise<TabInterface>",
              "description": "Promise with the duplicated tab instance"
            }
          }
        }
      },
      "code": "s3:TabInterface.duplicate"
    },
    {
      "parent": "interface-tab-interface",
      "id": "interface-tab-interface-method-send",
      "name": "send",
      "content": {
        "block": {
          "title": "method <code>send</code>",
          "body": {
            "description": [
              "Sends a message to the tab. This dispacthes the specified event in the corresponding content script."
            ],
            "parameters": [
              {
                "type": "event: string",
                "description": "The event to be dispatched"
              },
              {
                "type": "payload: object",
                "description": "The payload to be sent",
                "optional": true
              }
            ],
            "returns": {
              "type": "Promise<any>",
              "description": "Promise resolved after the listener responded"
            }
          }
        }
      },
      "code": "s3:TabInterface.send"
    }
  ]
}
