import axios from 'axios'
import { Cached } from '@exteranto/cache'

export class UserService {

  /**
   * Cache all users for the default cache timeout.
   */
  @Cached
  public all () : Promise<any> {
    return axios.get('/api/users').then(({ data }) => data)
  }

  /**
   * Cache a user for given time in seconds.
   * The cache key varies based on argument values.
   */
  @Cached({ timeout: 180 })
  public get (id) : Promise<any> {
    return axios.get(`/api/users/${id}`).then(({ data }) => data)
  }

  /**
   * You can resolve the integer from configs as well.
   * If this value doesn't exist, it uses the default cache timeout.
   */
  @Cached({ timeout: '%timeouts.user.foo%' })
  public foo () : Promise<any> {
    return axios.get('/api/users/foo}').then(({ data }) => data)
  }
}
